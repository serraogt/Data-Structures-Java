
    public class Main {

        public static void main(String[] args) {
            int[] intArray = { 20, 35, -15, 7, 55, 1, -22 };

            quickSort(intArray, 0, intArray.length);

            for (int i = 0; i < intArray.length; i++) {
                System.out.println(intArray[i]);
            }
        }

        public static void quickSort(int[] input, int start, int end) {
            if (end - start < 2) {
                return;
            }

            int pivotIndex = partition(input, start, end);
            quickSort(input, start, pivotIndex);
            for (int i = 0; i < input.length; i++) {
                System.out.println(input[i]);
            }
            quickSort(input, pivotIndex + 1, end);
        }

        public static int partition(int[] input, int start, int end) {
            // This is using the first element as the pivot
            int pivot = input[start];
            int i = start;
            int j = end;

            while (i < j) {

                // NOTE: empty loop body
                while (i < j && input[--j] >= pivot);
                if (i < j) {
                    input[i] = input[j];
                }

                // NOTE: empty loop body
                while (i < j && input[++i] <= pivot);
                if (i < j) {
                    input[j] = input[i];
                }

            }

            input[j] = pivot;
            return j;

        }
    }




public class yedek {

    public static void main(String[] args) {
        int[] arr = {4, 8, 1, 10, 13, 5, 2, 7};
        // Sorting the whole array
        quicksort(arr, 0, arr.length - 1);
    }
    static void quicksort(int[] arr, int low, int high){
        if(low < high){
            int p = partition(arr, low, high);
            quicksort(arr, low, p-1);
            quicksort(arr, p+1, high);
        }
    }

    static void swap(int[] arr, int low, int pivot){
        int tmp = arr[low];
        arr[low] = arr[pivot];
        arr[pivot] = tmp;
    }

    static int partition(int[] arr, int low, int high){
        int p = low, j;
        for(j=low+1; j <= high; j++)
            if(arr[j] < arr[low])
                swap(arr, ++p, j);

        swap(arr, low, p);
        return p;
    }
}
